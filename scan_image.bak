#!/bin/bash

PRINTER_1200="hpaio:/usb/PSC_1200_series?serial=MY49EG10BXT0"
PRINTER_750="hpaio:/usb/PSC_750?serial=ES168BH0MRWB"
PRINTER_4480="hpaio:/usb/Photosmart_C4400_series?serial=TH896H21V305BN"

scan_and_save()
{
  if [ -z $filename ]; then
    echo -n "Nom de fichier : "
    read user_filename
    filename=${user_filename// /_}
  fi
  while [ -f $filename ]; do
    echo "$filename existe déjà, donnez un autre nom de fichier ou supprimer l'ancien. "
    echo -n "Nom de fichier : "
    read user_filename
    filename=${user_filename// /_}
  done
  echo "Capture en cours..."
  scanimage -d $printer --mode Color --resolution 75 > $filename.pnm
  ret_scan=$?
  if [ $ret_scan -gt 0 ]; then
   echo "Error during scan"
   exit 1
  fi
  echo "Sauvegarde de l'image $filename.png"
  convert $filename.pnm $filename.png
  rm $filename.pnm
  FILES="$FILES $filename.png"
}


ask_new_scan()
{
  echo ""
  echo -n "Scanner une nouvelle image ? [o/n] : "
  read answer
  while ( [ -z $answer ] || [ $answer != "o" -a $answer != "O" -a $answer != "y" -a $answer != "Y" -a $answer != "n" -a $answer != "N" ] ); do
    read answer
  done
  if ( [ $answer = "n" ] || [ $answer = "N" ] ); then
    return 0
  else 
    return 1
  fi
}

help_message()
{
  ret_val=$1
  echo -p, --printer [750,1200,4480] : select printer
  echo -h, --help : display this help and quit
  exit $ret_val
}

# Read arguments
read_args(){
  TEMP=`getopt -o hp:f: --long printer:,file:,help \
  -n 'scan_image' -- "$@"`

  if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

  # Note the quotes around `$TEMP': they are essential!
  eval set -- "$TEMP"

  printer=$PRINTER_4480
  while true ; do
    case "$1" in
      -p|--printer) case "$2" in
      "750") printer=$PRINTER_750;;
      "1200") printer=$PRINTER_1200;;
      "4480") printer=$PRINTER_4480;;
      *) printer=$2;;
    esac
    echo "select printer $printer"
    shift 2 ;;
    -h|--help) help_message 0; shift;;
    -f|--file) filename="$2"; shift 2;;
    --) shift ; break ;;
    *) echo "parsing error";
    help_message 1 ;;
  esac
done

if [ -z $printer ]; then
  echo "Select printer"
  help_message 1
fi
}

read_args $@
scan_and_save
ask_new_scan
donewscan=$?
while [ $donewscan -ge 1 ]; do
  scan_and_save
  ask_new_scan
  donewscan=$?
done

